#version 330 core

// Interpolated values from the vertex shaders
in vec3 fragmentColor;
in vec3 fragmentPos;
in vec3 normal;
in vec3 cameraPos;

// Ouput data
out vec3 color;

//	vec3 lightPos = vec3(0.0f, 10.2f, 0.0f);

void main(){
//	vec3 lightColor = vec3(1.0,1.0,1.0);
	vec3 lightColor = vec3(0.9,0.55,0.8);
	vec3 lightPos = cameraPos;
	vec3 ambient = lightColor*0.6;
	vec3 norm = normalize(normal);
	vec3 lightDir = normalize(lightPos - fragmentPos);
	float diff = max(dot(norm, lightDir), 0.0);
	vec3 diffuse = diff * lightColor;
	vec3 result = (ambient + diffuse) * fragmentColor;
	color = result;
	//color = fragmentColor * ambient;
}
