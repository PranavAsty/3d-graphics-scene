#version 330 core

layout(location = 0) in vec3 vertexPosition_modelspace;
layout(location = 1) in vec3 vertexColor;
layout(location = 2) in vec3 normalVal;

out vec3 fragmentColor;
out vec3 normal;

uniform mat4 MVP;
uniform mat4 model;

void main(){
	gl_Position =  MVP * vec4(vertexPosition_modelspace,1); //sent to GPU
	normal = mat3(transpose(inverse(model))) * normalVal; //forwarded on to frag shader
	fragmentColor = vertexColor; //forwarded on to fragshader
}
